Unnamed: 0,repository,label,owner,name,watchers,description,mentionableUsers,closed_pull_requests,closed_issues,open_issues,forks,merged_pull_requests,stargazers,open_pull_requests,projects,size,readme,LANGUAGE_Python,LANGUAGE_JavaScript,isOwnerHomepage,hasHomepage,hasLicense,hasCiConfig,commitsCount,branchesCount,tagsCount,releasesCount,LANGUAGE_Swift,LANGUAGE_Ruby,LANGUAGE_Shell,LANGUAGE_Java,LANGUAGE_TeX,LANGUAGE_HTML,LANGUAGE_CSS,LANGUAGE_M,LANGUAGE_Matlab,LANGUAGE_R,LANGUAGE_Makefile,LANGUAGE_Batchfile,LANGUAGE_PHP,LANGUAGE_CoffeeScript,LANGUAGE_C,LANGUAGE_CMake,LANGUAGE_Objective-C++,LANGUAGE_Objective-C,LANGUAGE_C++,LANGUAGE_Jupyter Notebook,LANGUAGE_TypeScript,LANGUAGE_Go,LANGUAGE_Protocol Buffer,LANGUAGE_Isabelle,LANGUAGE_PLSQL,LANGUAGE_Lua,LANGUAGE_Perl,LANGUAGE_Yacc,LANGUAGE_M4,LANGUAGE_DIGITAL Command Language,LANGUAGE_Lex,LANGUAGE_Ragel in Ruby Host,LANGUAGE_PLpgSQL,LANGUAGE_Assembly,LANGUAGE_GDB,LANGUAGE_SourcePawn,LANGUAGE_Awk,LANGUAGE_UnrealScript
0,ga-chicago/wdi5-homework,HW,ga-chicago,wdi5-homework,5.0,Homework assignment and submissions for WDI 5,18.0,8.0,0.0,3.0,10.0,82.0,0.0,3.0,0.0,46819.0,,,0.863599424991,False,False,True,False,345.0,1.0,0.0,0.0,,0.108801434266,,,,0.0161188192236,0.0114803215189,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Aggregates/MI_HW2,HW,Aggregates,MI_HW2,4.0,Homework Assignment for Machine Intelligence,8.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,312.0,"COMP3330 - 65536
================

* Beau Gibson - C3146845
* Tyler Haigh - C3182929
* Simon Hartcher - C3185790
* Rob Logan - C3165020

# Abstract #

This project aims to develop two distinct training algorithms to create two intelligent agents for the purpose of playing 65536, an expansion on the recently popular 2048.

# Develop Notes #

This project has the following dependencies:

* PyBrain
* Numpy

This project is built using PyBuilder. Run `pip install pybuilder` and then run `pyb` to build this project",0.996855757893,0.00314424210664,False,False,False,False,46.0,2.0,0.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2,datasciencelabs/2016,EDU,datasciencelabs,2016,28.0,Course material for BIO 260 and CSCI E-107 in Spring 2016,14.0,10.0,0.0,0.0,128.0,1.0,38.0,0.0,0.0,81407.0,"# Welcome to BIO 260 Introduction to Data Science

Official course page here: [http://datasciencelabs.github.io](http://datasciencelabs.github.io)
",,,False,True,False,False,174.0,3.0,0.0,0.0,,,,,,0.993357511502,,,,0.00664248849775,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3,githubteacher/intro-november-2015,EDU,githubteacher,intro-november-2015,35.0,Introduction to GitHub (November 2015),88.0,5.0,26.0,45.0,22.0,20.0,13.0,23.0,0.0,999.0,"# Introduction to GitHub Redesigned
 Theese changes introduce a new Design
 ====================================================================

So you signed up for GitHub. Now what? Whether you're new to version control or just need an explanation of Git and GitHub, this one hour class will help you understand the concepts of distributed version control and get started using GitHub. Get to know basic Git concepts and GitHub workflows through step-by-step lessons.

### Teachers
- Allen Smith (@loranallensmith)
- Shikha Thakkar (@shikhathakkar)

### Class Goals
- Understand the concepts of distributed version control
- Get started using GitHub
- Basic Git concepts
- GitHub workflows

### Resources
- [Mastering Markdown](https://guides.github.com/features/mastering-markdown/)
- [Understanding the GitHub Flow](https://guides.github.com/introduction/flow/)
",,,False,False,False,False,52.0,42.0,0.0,0.0,,1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,atom/atom,DEV,atom,atom,1850.0,The hackable text editor,404.0,591.0,8277.0,1856.0,5490.0,2278.0,31999.0,99.0,0.0,412685.0,"![Atom](https://cloud.githubusercontent.com/assets/72919/2874231/3af1db48-d3dd-11e3-98dc-6066f8bc766f.png)

[![macOS Build Status](https://circleci.com/gh/atom/atom/tree/master.svg?style=shield)](https://circleci.com/gh/atom/atom) [![Linux Build Status](https://travis-ci.org/atom/atom.svg?branch=master)](https://travis-ci.org/atom/atom) [![Windows Build Status](https://ci.appveyor.com/api/projects/status/1tkktwh654w07eim?svg=true)](https://ci.appveyor.com/project/Atom/atom)
[![Dependency Status](https://david-dm.org/atom/atom.svg)](https://david-dm.org/atom/atom)
[![Join the Atom Community on Slack](http://atom-slack.herokuapp.com/badge.svg)](http://atom-slack.herokuapp.com/)

Atom is a hackable text editor for the 21st century, built on [Electron](https://github.com/atom/electron), and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.

Visit [atom.io](https://atom.io) to learn more or visit the [Atom forum](https://discuss.atom.io).

Follow [@AtomEditor](https://twitter.com/atomeditor) on Twitter for important
announcements.

This project adheres to the Contributor Covenant [code of conduct](CODE_OF_CONDUCT.md).
By participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.

## Documentation

If you want to read about using Atom or developing packages in Atom, the [Atom Flight Manual](http://flight-manual.atom.io) is free and available online. You can find the source to the manual in [atom/flight-manual.atom.io](https://github.com/atom/flight-manual.atom.io).

The [API reference](https://atom.io/docs/api) for developing packages is also documented on Atom.io.

## Installing

### Prerequisites
- [Git](https://git-scm.com/)

### macOS

Download the latest [Atom release](https://github.com/atom/atom/releases/latest).

Atom will automatically update when a new release is available.

### Windows

Download the latest [Atom installer](https://github.com/atom/atom/releases/latest).  AtomSetup.exe is 32-bit, AtomSetup-x64.exe for 64-bit systems.

Atom will automatically update when a new release is available.

You can also download `atom-windows.zip` (32-bit) or `atom-x64-windows.zip` (64-bit) from the [releases page](https://github.com/atom/atom/releases/latest).
The `.zip` version will not automatically update.

Using [chocolatey](https://chocolatey.org/)? Run `cinst Atom` to install the latest version of Atom.

### Debian Linux (Ubuntu)

Atom is only available for 64-bit Linux systems.

1. Download `atom-amd64.deb` from the [Atom releases page](https://github.com/atom/atom/releases/latest).
2. Run `sudo dpkg --install atom-amd64.deb` on the downloaded package.
3. Launch Atom using the installed `atom` command.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.

### Red Hat Linux (Fedora 21 and under, CentOS, Red Hat)

Atom is only available for 64-bit Linux systems.

1. Download `atom.x86_64.rpm` from the [Atom releases page](https://github.com/atom/atom/releases/latest).
2. Run `sudo yum localinstall atom.x86_64.rpm` on the downloaded package.
3. Launch Atom using the installed `atom` command.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.

### Fedora 22+

Atom is only available for 64-bit Linux systems.

1. Download `atom.x86_64.rpm` from the [Atom releases page](https://github.com/atom/atom/releases/latest).
2. Run `sudo dnf install ./atom.x86_64.rpm` on the downloaded package.
3. Launch Atom using the installed `atom` command.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.

### Archive extraction

An archive is available for people who don't want to install `atom` as root.

This version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,
but should be compatible with other Linux distributions.

1. Install dependencies (on Ubuntu): `sudo apt install git gconf2 gconf-service libgtk2.0-0 libudev1 libgcrypt20 libnotify4 libxtst6 libnss3 python gvfs-bin xdg-utils libcap2`
2. Download `atom-amd64.tar.gz` from the [Atom releases page](https://github.com/atom/atom/releases/latest).
3. Run `tar xf atom-amd64.tar.gz` in the directory where you want to extract the Atom folder.
4. Launch Atom using the installed `atom` command from the newly extracted directory.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.

## Building

* [Linux](./docs/build-instructions/linux.md)
* [macOS](./docs/build-instructions/macos.md)
* [FreeBSD](./docs/build-instructions/freebsd.md)
* [Windows](./docs/build-instructions/windows.md)

## License

[MIT](https://github.com/atom/atom/blob/master/LICENSE.md)

When using the Atom or other GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).
",,0.237569667119,False,False,True,True,30314.0,74.0,342.0,313.0,,,0.0018679586497,,,0.000109748616144,0.0107642930831,,,,,0.000732153479905,,0.748956179052,,,,,,,,,,,,,,,,,,,,,,,,
5,jmcglone/jmcglone.github.io,WEB,jmcglone,jmcglone.github.io,5.0,Data for jmcglone.com. Includes customization of Bootstrap 3.0. Blog and pages generated by Jekyll. Hosted on GitHub.,3.0,0.0,2.0,0.0,92.0,3.0,69.0,0.0,0.0,1777.0,"jmcglone.github.io
========

Data for jmcglone.com. Includes customization of Bootstrap 3.0. Blog and pages generated by Jekyll. Hosted on GitHub.

All content on this site is distributed under a [Creative Commons Attribution 3.0 Unported License](http://creativecommons.org/licenses/by/3.0/deed.en_US).

**NOTE:** If you fork or re-use this project, please be sure you:

* Edit `_includes/analytics.html` and either
  * Replace the Google Analytics tracking code with your own, or
  * If you don't use Google Analytics, comment the block of code out entirely.
* Edit `_includes/disqus.html` and either
  * Replace the `disqus_shortname` with your own DISQUS username, or
  * If you don't want commenting, remove or comment out the block of code entirely.

Otherwise I will receive GA data and DISQUS comments from your website.
",,0.0142696551882,True,True,False,False,342.0,3.0,0.0,0.0,,0.0257060267499,,,,0.89723324692,0.0627910711418,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,hpi-swt2-exercise/java-tdd-challenge,EDU,hpi-swt2-exercise,java-tdd-challenge,5.0,Fork this repository to learn TDD in Java,5.0,1.0,1.0,0.0,12.0,0.0,1.0,0.0,0.0,22.0,"# Java TDD Challenge

This is a small exercise to practice TDD in Java.
To participate, please follow these simple steps:

## 1) Fork this repository.

* You need to be logged-in with your Github account.
* Click the ""Fork"" button in the upper right!
* In your [repository's settings](/../../settings), enable issue tracking.

## 2) Set-up Travis CI for your fork

* Log-in to [Travis CI](http://travis-ci.org) and
* Enable automatic builds for your exercise repository.

## 3) Dive into the code

* Clone the repository on your computer!
* **You are not allowed to modify any code files**
  * except in the package `phones.impl`
  * and in the test folder,
  * or if otherwise noted.
* Try to get all tests green!
  * Preferably, not by deleting the tests. There is no one to cheat but yourself!

## 4) Commit and push

* When you are done, push your changes.
* Travis CI will now try to build your project.

## 5) Check your inbox

* You will be notified of problems via Github issues.
* While you wait, see if your code can use some refactorings.

## 6) Repeat steps 3 to 5 until no more issues are posted

* The end is a bit anti-climatic. Sorry for that!
",0.041598805646,,False,False,False,True,17.0,1.0,0.0,0.0,,,0.0207654723127,0.937635722041,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7,alphagov/performanceplatform-documentation,DOCS,alphagov,performanceplatform-documentation,23.0,Documentation site for the Performance Platform,55.0,5.0,0.0,0.0,7.0,46.0,5.0,0.0,0.0,1939.0,"
# Performance Platform Documentation

To build it locally make sure you have Sphinx_ installed. You can install it with pip::

  `pip install -r requirements.txt`

Once [Sphinx](http://sphinx-doc.org/) is installed the documentation can be built and served with make::

  `make html serve`

If you want to see your changes in realtime, you can install sphinx-autobuild::

  `pip install sphinx-autobuild`

Once sphinx-autobuild is installed, you can build the docs with this command:

  `sphinx-autobuild . ./_build/html`

And then visit the webpage served at [http://127.0.0.1:8000](http://127.0.0.1:8000). Each time a change to the documentation source is detected, the HTML is rebuilt and the browser automatically reloaded.

To stop the server simply press `^C`.
",0.545858535983,,False,True,False,False,206.0,5.0,0.0,0.0,,,,,,,0.01740525861,,,,0.436736205407,,,,,,,,,,,,,,,,,,,,,,,,,,,
8,harvesthq/how-to-walkabout,DOCS,harvesthq,how-to-walkabout,47.0,Public documentation for how to make your OWN Walkabout event,51.0,0.0,1.0,0.0,15.0,0.0,64.0,0.0,0.0,2867.0,"# How To Organize Your Own Walkabout Event
[Harvest](http://www.getharvest.com), a leader in time tracking, created [WalkaboutNYC](http://www.walkaboutnyc.com) in 2010, and has been organizing this event in New York City each year since. Over the years, we've had many inquiries from people who want to organize Walkabouts outside New York City, so we decided to open source the idea, and share our experience. We hope that this will help you along as you prepare for your own event.

### What's so special about Walkabout?
* Creates a backdrop for neighbors to meet neighbors, and connects folks interested in the local tech scene.
* Strengthens tech/startup community.
* Increases awareness of hosting companies to other neighboring companies.
* Allows for a “behind the scenes” look at how startups work and their workspaces.
* Recruiting/attracts talent.

### Why would companies want to participate?
* It’s a good opportunity to tell people who you are, and what you do, create fans, introduce yourself to new users.
* It’s a great way to connect with people in your area, and introduce them to the people behind the company name: creates a personal connection.
* Good talent is hard to find. This is one more way to meet potential hires.

### How we envision Walkabout in other cities:
* Here at Harvest, we support the idea of Walkabout, and we aim to help others create connections with their neighbors.
* We envision it running much like a syndicate, with folks in the specific city organizing the event themselves. This way, it can be run by people who would know best about the tech companies, environment, events, and local customs.
* Share how your event went in your city, so that we can learn from you as well - let’s share the knowledge and help each other! Drop us a line in the [issues section](https://github.com/harvesthq/how-to-walkabout/issues).

### How to get started hosting in your city:
* Partner with a city-wide event or trade show (in NYC, we partnered with Internet Week).
* Partner with city government.
* Identify the major players in your city, and get them on board first. Once you reach a critical mass and have some companies confirmed, others will follow.
* Allot more time than you think you’ll need - each year, we've run out of time for many ideas we wanted to execute on.
* Set up a website, with a map that’s easily viewable via mobile phone.
* Places to get the word out: government agencies, incubator spaces, reputable universities with tech programs, places that job seekers look.

### Tell me more! 
Sure! Go to `further_walkabout_details.md` in this repository, and read the [Harvest blog post](http://www.getharvest.com/blog/2012/06/diy-walkabout/) about WalkaboutNYC lessons learned.

## Resources
You can use/modify the following assets for your own event. Find them in this repository, in the directory called `walkabout-assets`:

* Walkabout sticker design
* Walkabout signs
* Walkaboutnyc.com
* Walkaboutnyc.com instructions

Check out our [current WalkaboutNYC site](http://walkaboutnyc.com/) to see how we've changed things, and get creative!

### Documentation of past WalkaboutNYC events:
* [WalkaboutNYC 2012 Storify](http://storify.com/walkaboutnyc/walkaboutnyc2012)
* [WalkaboutNYC 2010 - 2012 photos](http://www.flickr.com/photos/harvesthq/sets/72157624283744020/)

### The Story Behind WalkaboutNYC
Danny Wen and Shawn Liu, the founders of Harvest, have always enjoyed taking tours of creative and entrepreneurial workspaces. No matter what size, they found the spaces always fostered inspirational energy. Today, Harvest HQ has become a gathering point where the founders invite others to visit their workspace and share their tools of the trade.

In an effort to enable others to benefit from these types of experiences, the team at Harvest created the first WalkaboutNYC in 2010. The goal is simple: to put New York City’s vibrant tech scene on the map, and to inspire each other and the growing generation of entrepreneurs.

## Feedback
Please direct all feedback, questions and issues to the [issues section](https://github.com/harvesthq/how-to-walkabout/issues).

## Walkabout Credits
* Built by [Harvest](http://www.getharvest.com/). Want to work on projects like this? [We’re hiring!](http://www.getharvest.com/careers)
* Concept by [Danny Wen](http://www.getharvest.com/about/meet-the-team#danny-wen) and [Shawn Liu](http://www.getharvest.com/about/meet-the-team#shawn-liu)
* Contribution, organization, and documentation by [Karen Schoellkopf](http://flavors.me/kgunette)
* Additional notes by [Kristine Lauria](http://www.krissymo.com/)",,,False,False,True,False,7.0,1.0,0.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,vhf/free-programming-books,DATA,vhf,free-programming-books,4914.0,:books: Freely available programming books,818.0,282.0,229.0,54.0,15981.0,1568.0,69085.0,45.0,0.0,6950.0,"# List of Free Learning Resources [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

[View the English list](/free-programming-books.md)

## Intro
This list initially was a clone of [stackoverflow - List of Freely Available Programming Books](http://web.archive.org/web/20130824154208/http://stackoverflow.com/a/392926) by George Stocker. Now updated, with dead links gone and new content.

Moved to GitHub for collaborative updating.

### How To Contribute

Please read [CONTRIBUTING](/CONTRIBUTING.md).

### How to Share
+ [Share on Twitter](http://twitter.com/home?status=https://github.com/vhf/free-programming-books%0AFree%20Programming%20Books)
+ [Share on Facebook](http://www.facebook.com/sharer/sharer.php?s=100&p[url]=https://github.com/vhf/free-programming-books&p[images][0]=&p[title]=Free%20Programming%20Books&p[summary]=)
+ [Share on Google Plus](https://plus.google.com/share?url=https://github.com/vhf/free-programming-books)
+ [Share on LinkedIn](http://www.linkedin.com/shareArticle?mini=true&url=https://github.com/vhf/free-programming-books&title=Free%20Programming%20Books&summary=&source=)


### In Other Spoken Languages
+ Arabic: [github](/free-programming-books-ar.md)
+ Azerbaijan: [github](/free-programming-books-az.md)
+ Bulgarian: [github](/free-programming-books-bg.md)
+ Chinese: [github](/free-programming-books-zh.md)
+ Czech: [github](/free-programming-books-cs.md)
+ English: [github](/free-programming-books.md)
+ French: [github](/free-programming-books-fr.md)
+ German: [github](/free-programming-books-de.md)
+ Greek: [github](/free-programming-books-gr.md)
+ Hungarian: [github](/free-programming-books-hu.md)
+ Indonesian: [github](/free-programming-books-id.md)
+ Italian: [github](/free-programming-books-it.md)
+ Japanese: [github](/free-programming-books-ja.md)
+ Korean: [github](/free-programming-books-ko.md)
+ Persian/Farsi (Iran): [github](/free-programming-books-fa_IR.md)
+ Polish: [github](/free-programming-books-pl.md)
+ Portuguese (Brazil): [github](/free-programming-books-pt_BR.md)
+ Portuguese (Portugal): [github](/free-programming-books-pt_PT.md)
+ Romanian (Romania): [github](/free-programming-books-ro.md)
+ Russian: [github](/free-programming-books-ru.md)
+ Slovak: [github](/free-programming-books-sk.md)
+ Spanish: [github](/free-programming-books-es.md)
+ Swedish: [github](/free-programming-books-se.md)
+ Turkish: [github](/free-programming-books-tr.md)
+ Ukrainian: [github](/free-programming-books-ua.md)


### Free Online Courses
+ [Free Online Courses](/free-courses-en.md)


### Interactive Programming Resources
+ [Free interactive programming tutorials](/free-programming-interactive-tutorials-en.md)


### JavaScript Frameworks and Resources
+ [Free JavaScript frameworks resources and tutorials - English](/javascript-frameworks-resources.md)
+ [Free JavaScript frameworks resources and tutorials - Portuguese (Brazil)](/javascript-frameworks-resources-pt_BR.md)


### Problem Sets and Competitive Programming
+ [Problem Sets](/problem-sets-competitive-programming.md)


### Podcast - Screencast
Free Podcasts and Screencasts:

+ Czech: [github](/free-podcasts-screencasts-cs.md)
+ English: [github](/free-podcasts-screencasts-en.md)
+ Portuguese (Brazil): [github](/free-podcasts-screencasts-pt_BR.md)
+ Russian: [github](/free-podcasts-screencasts-ru.md)


### Programming Playgrounds
+ [Free Programming Playgrounds](/free-programming-playgrounds.md)
",,,False,False,True,True,4215.0,3.0,0.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,d3/d3,DEV,d3,d3,2759.0,"Bring data to life with SVG, Canvas and HTML. :bar_chart::chart_with_upwards_trend::tada:",124.0,615.0,1751.0,85.0,14959.0,422.0,56332.0,0.0,0.0,64534.0,"# D3: Data-Driven Documents

<a href=""https://d3js.org""><img src=""https://d3js.org/logo.svg"" align=""left"" hspace=""10"" vspace=""6""></a>

**D3** (or **D3.js**) is a JavaScript library for visualizing data using web standards. D3 helps you bring data to life using SVG, Canvas and HTML. D3 combines powerful visualization and interaction techniques with a data-driven approach to DOM manipulation, giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data.

## Resources

* [API Reference](https://github.com/d3/d3/blob/master/API.md)
* [Release Notes](https://github.com/d3/d3/releases)
* [Gallery](https://github.com/d3/d3/wiki/Gallery)
* [Examples](http://bl.ocks.org/mbostock)
* [Wiki](https://github.com/d3/d3/wiki)

## Installing

If you use npm, `npm install d3`. Otherwise, download the [latest release](https://github.com/d3/d3/releases/latest). The released bundle supports anonymous AMD, CommonJS, and vanilla environments. You can load directly from [d3js.org](https://d3js.org), [CDNJS](https://cdnjs.com/libraries/d3), or [unpkg](https://unpkg.com/d3/). For example:

```html
<script src=""https://d3js.org/d3.v4.js""></script>
```

For the minified version:

```html
<script src=""https://d3js.org/d3.v4.min.js""></script>
```

You can also use the standalone D3 microlibraries. For example, [d3-selection](https://github.com/d3/d3-selection):

```html
<script src=""https://d3js.org/d3-selection.v1.js""></script>
```

D3 is written using [ES2015 modules](http://www.2ality.com/2014/09/es6-modules-final.html). Create a [custom bundle using Rollup](http://bl.ocks.org/mbostock/bb09af4c39c79cffcde4), Webpack, or your preferred bundler. To import D3 into an ES2015 application, either import specific symbols from specific D3 modules:

```js
import {scaleLinear} from ""d3-scale"";
```

Or import everything into a namespace (here, `d3`):

```js
import * as d3 from ""d3"";
```

In Node:

```js
var d3 = require(""d3"");
```

You can also require individual modules and combine them into a `d3` object using [Object.assign](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign):

```js
var d3 = Object.assign({}, require(""d3-format""), require(""d3-geo""), require(""d3-geo-projection""));
```
",,1.0,False,True,True,False,4045.0,34.0,206.0,98.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
11,carlosmn/CoMa-II,HW,carlosmn,CoMa-II,2.0,,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,644.0,,,,False,False,False,False,62.0,1.0,0.0,0.0,,,,,,,,0.0490069482875,0.950993051712,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
12,git/git-scm.com,DEV,git,git-scm.com,167.0,The git-scm.com website. Note that this repository is only for the website; issues with git itself should go to https://git-scm.com/community.,122.0,47.0,359.0,234.0,587.0,225.0,1258.0,26.0,0.0,74075.0,"# Git Homepage [![Build Status](https://travis-ci.org/git/git-scm.com.svg?branch=master)](https://travis-ci.org/git/git-scm.com)

This is the web application for the [git-scm.com](https://git-scm.com) site.  It is meant to be the
first place a person new to Git will land and download or learn about the
Git SCM system.

This app is written in Ruby on Rails and deployed on Heroku.

## Setup

You'll need a Ruby environment to run Rails.  First do:

    $ rvm use 2.1.8
    $ bundle install

Then you need to create the database structure:

    $ rake db:migrate

Now you'll want to populate the man pages.  You can do so from a local Git
source clone like this:

    $ GIT_REPO=../git/.git rake local_index

Or you can do it from GitHub (much slower) like this:
    
    $ export API_USER=github_username
    $ export API_PASS=github_password
    $ rake preindex

Now you need to get the latest downloads for the downloads pages:

    $ rake downloads

Now you'll probably want some book data. You'll have
to have access to the [Pro Git project on GitHub](https://github.com/progit/progit) through the API.

    $ export API_USER=github_username
    $ export API_PASS=github_password
    $ rake remote_genbook

That will generate the book content from the Markdown files fetched from the online repository and post it to the Rails server database.

Now you can run the Rails site to take a look.  Specify an UPDATE_TOKEN so you
can use the world's stupidest authentication mechanism:

    $ UPDATE_TOKEN=something rails server

The site should be running on http://localhost:3000


## Testing

To run the tests for this project, run:

    $ rspec

To run the website for testing purposes, run:

    $ rails server

## Contributing

If you wish to contribute to this website, please [fork it on GitHub](https://github.com/git/git-scm.com), push your
change to a named branch, then send a pull request. If it is a big feature,
you might want to start an Issue first to make sure it's something that will
be accepted.  If it involves code, please also write tests for it.

## License

The source code for the site is licensed under the MIT license, which you can find in
the MIT-LICENSE.txt file.

All graphical assets are licensed under the
[Creative Commons Attribution 3.0 Unported License](https://creativecommons.org/licenses/by/3.0/).
",,0.563046891609,False,False,True,True,935.0,11.0,0.0,0.0,,0.0529509452969,0.00024882476656,,,0.0865263329482,0.297227005379,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,PowerDNS/pdns,DEV,PowerDNS,pdns,85.0,PowerDNS,99.0,223.0,1689.0,505.0,279.0,2235.0,704.0,78.0,0.0,42711.0,"PowerDNS is copyright © 2002-2016 by PowerDNS.COM BV and lots of
contributors, using the GNU GPLv2 license (see NOTICE for the
exact license and exception used).

All documentation can be found on http://doc.powerdns.com/

This file may lag behind at times. For most recent updates, always check
https://doc.powerdns.com/md/changelog/.

Another good place to look for information is:
https://doc.powerdns.com/md/appendix/compiling-powerdns/

To file bugs, head towards:
https://github.com/PowerDNS/pdns/issues

But please check if the issue is already reported there first.

SOURCE CODE / GIT
-----------------
Source code is available on GitHub:

```
$ git clone https://github.com/PowerDNS/pdns.git
```

This repository contains the sources for the PowerDNS Recursor, the PowerDNS
Authoritative Server, and dnsdist (a powerful DNS loadbalancer). All three can
be built from this repository. However, all three released separately as .tar.bz2,
.deb and .rpm.

COMPILING Authoritative Server
------------------------------
The PowerDNS Authoritative Server depends on Boost, OpenSSL and requires a
compiler with C++-2011 support.

On Debian 8.0, the following is useful:

```
$ apt-get install g++ libboost-all-dev libtool make pkg-config libmysqlclient-dev libssl-dev
```

When building from git, the following packages are also required: autoconf, automake,
ragel, bison and flex, then generate the configure file:

```
$ ./bootstrap
```

To compile a very clean version, use:

```
$ ./configure --with-modules="""" --without-lua
$ make
# make install
```

This generates a PowerDNS Authoritative Server binary with no modules built in.

When `./configure` is run without `--with-modules`, the bind and gmysql module are
built-in by default and the pipe-backend is compiled for runtime loading.

To add multiple modules, try:

```
$ ./configure --with-modules=""bind gmysql gpgsql""
```

Note that you will need the development headers for PostgreSQL as well in this case.

See https://doc.powerdns.com/md/appendix/compiling-powerdns/ for more details.

If you run into C++11-related symbol trouble, please try passing `CPPFLAGS=-D_GLIBCXX_USE_CXX11_ABI=0` (or 1) to `./configure` to make sure you are compatible with the installed dependencies.

COMPILING THE RECURSOR
----------------------
See the README in pdns/recursordist.

COMPILING DNSDIST
----------------------
See the README in pdns/dnsdistdist.

SOLARIS NOTES
-------------
Use a recent gcc. OpenCSW is a good source, as is Solaris 11 IPS.

If you encounter problems with the Solaris make, gmake is advised.

FREEBSD NOTES
-------------
You need to compile using gmake - regular make only appears to work, but doesn't in fact. Use gmake, not make.

MAC OS X NOTES
--------------
PowerDNS Authoritative Server is available through Homebrew:

```
$ brew install pdns
```

If you want to compile yourself, the dependencies can be installed using
Homebrew:

```
$ brew install boost lua pkg-config ragel
```

For PostgreSQL support:

```
$ brew install postgresql
```

For MySQL support:

```
$ brew install mariadb
```

LINUX NOTES
-----------
None really.
",0.0773272487383,0.0931038837192,False,False,True,True,11367.0,10.0,105.0,0.0,,0.00781986579636,0.0474951992371,,,0.00142842835433,0.00263634819792,,,,0.0095146113015,,,,0.00221518739304,,,,0.614955911361,,,,0.000570953316119,8.97013294085e-05,0.00245137186426,0.00553570417721,0.00234547204236,0.000794945373632,0.0240686955424,0.103179171874,0.000641495138275,0.000932197116494,0.00289360812711,,,,,
14,cmrberry/cs6300-git-practice,HW,cmrberry,cs6300-git-practice,0.0,,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,136.0,,,,False,False,False,False,11.0,3.0,1.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Sefaria/Sefaria-Project,DEV,Sefaria,Sefaria-Project,39.0,New Interfaces for Jewish Texts,27.0,12.0,81.0,31.0,67.0,137.0,134.0,2.0,0.0,72945.0,"## New Interfaces for Jewish Texts

Sefaria is creating interfaces, apps (like a source sheet builder) and infrastructure (like an API and a structured dataset) for Jewish texts and textual learning. Our website is up at www.sefaria.org.

You can find outputs of our entire database in [Sefaria-Export](https://github.com/Sefaria/Sefaria-Export).

Interested developers should join the [sefara-dev mailing list](https://groups.google.com/forum/#!forum/sefaria-dev).

For general discussion about the project, please post to the [Sefaria Forum](https://groups.google.com/forum/?fromgroups#!forum/sefaria).

You can post bugs or request/discuss features on [GitHub Issues](https://github.com/blockspeiser/Sefaria-Project/issues?direction=desc&page=1&sort=created&state=open). Tackling an issue marked as a ""Starter Project"" is a good way to sink your teeth into Sefaria.

If you're interested in working on a project you see listed here, please email the [sefara-dev mailing list](https://groups.google.com/forum/#!forum/sefaria-dev).

***

### Getting Started

#### Install Python
Most UNIX systems come with a python interpreter pre-installed. 
##### For Windows:

Go to the [Python Download Page](https://www.python.org/download/releases/2.7.6) and download and install python.
Add the python directory to your OS' PATH variable. See [here](https://docs.python.org/2/using/windows.html)

#### (Optional) Install virtualenv:
If you work on many Python projects, you may want to keep Sefaria's python installation separate using Virtualenv.  If you're happy having Sefaria requirements in your main Python installation, skip this step.

Install [virtualenv](http://pypi.python.org/pypi/virtualenv) then enter these commands:

    virtualenv venv --distribute
    source venv/bin/activate

Now you should see `(venv)` in front of your command prompt. The second command sets your shell to use the Python virtual environment that you've just created. This is something that you have to run everytime you open a new shell and want to run the Sefaria demo. You can always tell if you're in the virtual environment by checking if `(venv)` is at the beginning of your command prompt. 
    
#### Pip: 
If you don't already have it in your Python installation, install [pip](http://www.pip-installer.org/en/latest/installing.html). Then use it to install the required Python packages.

	pip install -r requirements.txt

If you are not using virtualenv, run it with sudo: `sudo pip install -r requirements.txt`

If you see an error about a missing 'python.h' file, you'll need to install the Python development libraries. 

On Debian systems: 

    sudo apt-get install python-dev

On Fedora systems:

    sudo yum install python-devel

After installing the Python development libraries, run `pip install -r requirements.txt` again.

On Windows systems, use instructions [here](http://www.tylerbutler.com/2012/05/how-to-install-python-pip-and-virtualenv-on-windows-with-powershell/) and then make sure that the scripts sub folder of the python installation directory is also in PATH.

#### Create a local settings file:

    cd sefaria
    cp local_settings_example.py local_settings.py
    vim local_settings.py
    
Replace the placeholder values with values with those matching your environment. You can name your local database (`sefaria` will be the default created by `mongorestore` below). You can leave `SEFARIA_DB_USER` ad `SEFARIA_DB_PASSWORD` blank if you don't need to run authentication on Mongo.

#### Create a log directory:
Create a directory called ""log"" under the project folder. Make sure that the server user has write access to it by using a command such as chmod 777.

#### Get Mongo running:

If you don't already have it, [install MongoDB](http://docs.mongodb.org/manual/installation/). Our current data dump requires MongoDB version 2.6 or later. After installing Mongo, run the mongo daemon with:

    sudo mongod

#### Put some texts in your database:

A MongoDB dump of our database is available at http://dev.sefaria.org/static/dump.tar.gz . Download and unzip this content, then from the parent directory which contains `dump` run:

    mongorestore --drop

This will create (or overwrite) a mongo database called `sefaria`.

#### Set up Django's local server
`manage.py` is used to run and to manage the local server.  Is is located in the root directory of the `Sefaria-Project` code base. 

Django auth features run on a separate database. To init this database and set up Django's auth system, switch to the root directory of the `Sefaria-Project` code base, and run: 

    python manage.py syncdb
    
#### Run the development server:

    python manage.py runserver

You can also make it publicly available by specifying 0.0.0.0 for the host:

    python manage.py runserver 0.0.0.0:8000

#### (Optional) Get Node running for server side rendering

Sefaria uses React.js. To render HTML server-side, we use a Node.js server. For development, the site is fully functional without server side rendering. For deploying in a production environemnet however server side HTML is very important for bots and SEO. To install node and npm, see [here](https://nodejs.org/en/download/). On Debian systems you can do:

    sudo apt-get install nodejs
    sudo apt-get install npm

Now download the required Javascript libraries and install some global tools for development with the `setup` script.

    npm install
    sudo npm run setup

Create a local settings file for node and tell it what port to run on and where to find the Django server. The port should match the `NODE_HOST` variable set in Django's `local_settings.py`.

    cp node/local_settings_example.json node/local_settings.json
    vim node/local_settings.json

For development, you can run the Node server using nodemon with:

    npm start

## Command Line Interface

The shell script `cli` will invoke a python interpreter with the core models loaded, and can be used as a standalone interface to texts or for testing.

    $ ./cli
    >>> p = LinkSet(Ref(""Genesis 13""))
    >>> p.count()
    226

## Thanks

We're grateful to the following orgazations for providing us with donated services:

- [BrowserStack](https://www.browserstack.com/)
- [Google Apps for Work](https://apps.google.com/)
- [PyCharm](https://www.jetbrains.com/pycharm/)
- [Slack](https://slack.com)


## License

[GPL](http://www.gnu.org/copyleft/gpl.html)


",0.235719578118,0.407659396406,False,False,False,True,6712.0,92.0,0.0,0.0,,,0.000306957084422,,,0.295266016259,0.0562448291,,,,,3.43041127557e-05,0.00476891892045,,,,,,,,,,,,,,,,,,,,,,,,,
16,mongodb/docs,DOCS,mongodb,docs,83.0,The MongoDB Documentation Project Source.,363.0,2062.0,0.0,28.0,908.0,661.0,445.0,28.0,0.0,60070.0,"=====================
MongoDB Documentation
=====================

This repository contains a major revision of the MongoDB documentation,
currently accessible at http://docs.mongodb.org/manual/. You can build
the documentation locally if you have `giza
<https://pypi.python.org/pypi/giza>`_ and Inkscape installed: ::

     pip install giza
     git clone https://github.com/mongodb/docs.git
     cd docs/
     make html

Visit ``docs/mongodb/build/html/index.html`` to view the current state
of the documentation. See `MongoDB Documentation Buildsystem
<http://docs.mongodb.org/manual/meta/build/>`_ for complete
instructions on building the MongoDB documentation.

The MongoDB Documentation Project is governed by the terms of the
`MongoDB Contributor Agreement
<http://www.mongodb.com/legal/contributor-agreement>`_.

To contribute to the documentation, please fork this repository on
GitHub and issue a pull request. If you have not done so already,
please sign the `MongoDB Contributor Agreement
<http://www.mongodb.com/legal/contributor-agreement>`_

To file issues or requests regarding the documentation, go to the
`Documentation Jira Project <https://jira.mongodb.org/browse/DOCS>`_.

For an overview of the documentation style, process, and overall
organization, see the following pages:

- `Style Guide <http://docs.mongodb.org/manual/meta/style-guide>`_
- `Documentation Practices <http://docs.mongodb.org/manual/meta/practices>`_
- `Documentation Organization <http://docs.mongodb.org/manual/meta/organization>`_
- `Build Instructions <http://docs.mongodb.org/manual/meta/build>`_

All documentation is available under the terms of a `Creative Commons
License <http://creativecommons.org/licenses/by-nc-sa/3.0/>`_.

If you have any questions, please contact `docs@mongodb.com
<mailto:docs@mongodb.com>`_.

-- The MongoDB Documentation Team
",0.930660888407,,False,False,False,False,10620.0,11.0,0.0,0.0,,,,,,,,,,,0.0693391115926,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,sindresorhus/eslint-config-xo,DEV,sindresorhus,eslint-config-xo,13.0,ESLint shareable config for XO,13.0,8.0,17.0,4.0,11.0,4.0,67.0,0.0,0.0,77.0,"# eslint-config-xo [![Build Status](https://travis-ci.org/sindresorhus/eslint-config-xo.svg?branch=master)](https://travis-ci.org/sindresorhus/eslint-config-xo)

> ESLint [shareable config](http://eslint.org/docs/developer-guide/shareable-configs.html) for [XO](https://github.com/sindresorhus/xo)

This is for advanced users. [You probably want to use XO directly.](#use-the-xo-cli-instead)

See [eslint-plugin-unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn) for some additional useful rules.


## Install

```
$ npm install --save-dev eslint-config-xo
```


## Usage

Add some ESLint config to your `package.json`:

```json
{
	""name"": ""my-awesome-project"",
	""eslintConfig"": {
		""extends"": ""xo""
	}
}
```

Or to `.eslintrc`:

```json
{
	""extends"": ""xo""
}
```

Supports parsing ES2015+, but doesn't enforce it by default.

This package also exposes [`xo/esnext`](esnext.js) if you want ES2015+ rules:

```json
{
	""extends"": ""xo/esnext""
}
```

And [`xo/browser`](browser.js) if you're in the browser:

```json
{
	""extends"": ""xo/browser""
}
```


## Use the XO CLI instead

XO is an ESLint wrapper with great defaults.

Here are some reason why you should use the [XO CLI](https://github.com/sindresorhus/xo) instead of this config:

- XO comes bundled with this config.
- [Beautiful output.](https://github.com/sindresorhus/eslint-formatter-pretty)
- Bundles many useful plugins, like [`eslint-plugin-unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn), [`eslint-plugin-import`](https://github.com/benmosher/eslint-plugin-import), [`eslint-plugin-ava`](https://github.com/avajs/eslint-plugin-ava), and more.
- No need to specify file paths to lint. It will lint all JS files except [commonly ignored paths](https://github.com/sindresorhus/xo#ignores).
- Super simple to add XO to a project: `$ xo --init`
- Specify `indent` and `semicolon` preferences easily without messing with the rule config.
- Config/rule overrides per files/globs. *(ESLint still doesn't support this)*
- Can open all files with errors at the correct line in your editor. *(See the `--open` flag)*
- The [editor plugins](https://github.com/sindresorhus/xo#editor-plugins) are IMHO better than the ESLint ones. *(Subjective)*

tl;dr You miss out on a lot by just using this config.


## Related

- [eslint-config-xo-space](https://github.com/sindresorhus/eslint-config-xo-space) - ESLint shareable config for XO with 2-space indent
- [eslint-config-xo-react](https://github.com/sindresorhus/eslint-config-xo-react) - ESLint shareable config for React to be used with this config


## License

MIT © [Sindre Sorhus](https://sindresorhus.com)
",,1.0,False,False,True,True,135.0,1.0,26.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
18,e-books/backbone.en.douceur,EDU,e-books,backbone.en.douceur,17.0,le gros tuto pour apprendre Backbone.js,17.0,3.0,2.0,7.0,46.0,28.0,101.0,1.0,0.0,73344.0,"<hr>

###- [Télécharger le ""LIVRE"" en pdf (v° alpha du 20/12/2012)](backbone.en.douceur.20121220.pdf)

###- [Format epub disponible aussi ...](backbone.en.douceur.20121220.epub)

###- [Voir le code source ...](https://github.com/k33g/backbone.en.douceur)


<hr>

Cet ouvrage va traiter au moins les points suivants :

- 01-Préambule & Remerciements *(publié)*
- 02-Présentation *(publié)*
- 03-Prérequis : jQuery & Underscore *(publié)*
- 04-Premiers contacts avec Backbone *(publié)*
- 05-Le modèle objet de Backbone *(publié)*
- 06-Il nout faut un serveur & Principes REST *(publié)*
- 07-Les Modèles & Collections en détail *(publié)*
- 08-Les Vues & Templating *(publié)*
- 09-Le Routeur *(publié)*
- 10-Organiser son code *(publié)*
- 11-""Securisation"" de notre application *(publié)*
- 12-Backbone.Sync *(à écrire)*
- 13-Backbone & Coffeescript *(publié)*
- 14-Autres frameworks MVC *(publié)*
- 15-Backbone & Typescript *(publié)*
- 16-Ressources *(à écrire)*
- 17-Hors Serie : RestHub Backbone Stack : ""quick start"" *(publié)*

Soyez patient, l'ensemble des chapitres sera publié avant fin décembre. J'ai juste besoin d'un peu de temps entre ma vie de famille, ma vie pro et ma vie de geek.

Un pdf sera généré à chaque mise à jour (j'utilise Pandoc).

Toute aide est la bienvenue, tant pour les corrections, les conseils, les ajouts que pour la mise en forme (je vous avoue que le paramétrage d'un template latex pour générer un pdf me rend chèvre, mais le résultat est déjà correct).

<a rel=""license"" href=""http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US""><img alt=""Creative Commons License"" style=""border-width:0"" src=""http://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png"" /></a><br /><span xmlns:dct=""http://purl.org/dc/terms/"" property=""dct:title"">Backbone.en.douceur</span> by <a xmlns:cc=""http://creativecommons.org/ns#"" href=""http://k33g.github.com/backbone.en.douceur/"" property=""cc:attributionName"" rel=""cc:attributionURL"">Philippe CHARRIERE</a> is licensed under a <a rel=""license"" href=""http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US"">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>.<br />Based on a work at <a xmlns:dct=""http://purl.org/dc/terms/"" href=""https://github.com/k33g/backbone.en.douceur"" rel=""dct:source"">https://github.com/k33g/backbone.en.douceur</a>.
",,,False,True,False,False,129.0,3.0,0.0,0.0,,,0.00387818327738,,0.00763209899982,0.978588009907,0.00990170781591,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,erikflowers/weather-icons,DEV,erikflowers,weather-icons,165.0,215 Weather Themed Icons and CSS,21.0,12.0,87.0,51.0,377.0,26.0,3737.0,8.0,0.0,74142.0,"# Weather Icons
*Version 2.0.10 - September 19th, 2015*

## 222 Weather Themed Icons and CSS

Weather Icons is the only icon font and CSS with 222 weather themed icons, ready to be dropped right into [Bootstrap](http://www.getbootstrap.com), or any project that needs high quality weather, maritime, and meteorological based icons!

Get started at [http://weathericons.io](http://weathericons.io)!

![Icon Preview](http://i.imgur.com/XmZW2q3.png)

## Basic Usage

Place the 5 font files and the main `weather-icons.min.css` file in your project, with the assumption that the fonts are located up `../` from your CSS directory.

The icons are displayed by using an `i` element and adding the base class `wi` and then the icon class you want, such as `day-sunny`. This then looks like `<i class=""wi wi-day-sunny""></i>`.

To add a modifier, include the class you want after the icon name, which looks like `<i class=""wi wi-day-sunny wi-flip-vertical""></i>`. You can flip, rotate, or add a fixed width. See it all at [http://weathericons.io](http://weathericons.io).

## API Usage

This set includes companion CSS files for popular weather service API. Presently there are mappings for Forecast.io, Open Weather Map, World Meteorological Organization, Weather Underground, and Yahoo. Check the [API List](https://erikflowers.github.io/weather-icons/api-list.html) to see the class names.

## Wind Usage

To use the wind indicators, you must also use `weather-icons-wind.min.css` along with the default CSS file. To dispay a wind indicator, you must use the base class `wi` and `wi-wind`, and then include the towards/from direction you want, like `from-293-deg`. This ends up looking like . You can use any degree from 0 to 359 in this manner. **Note:** A ""from"" class has the point of the arrow at the opposite end of the degree. For example, a ""from 90 degrees"" icon would point to the 270 degree mark, wheras a ""towards 270 degrees"" would point at the same 270 degree mark.

Included in the set as well are aliases to point to cardinal directions. They work the same as degrees, for example `<i class=""wi wi-wind towards-sse""></i>` would be an arrow pointing to the South by Southeast (roughly 158 degrees). 

## Contributing
If you feel so inclined to add icon ideas, icon art, or other fixes/changes to how the package works, feel free to help!

## Credit
The icon designs are originally by [Lukas Bischoff](http://www.twitter.com/artill). Icon art for v1.1 forward, HTML, Less, and CSS are by [me (Erik)](http://www.helloerik.com).

## Licensing

* Weather Icons licensed under [SIL OFL 1.1](http://scripts.sil.org/OFL)
* Code licensed under [MIT License](http://opensource.org/licenses/mit-license.html)
* Documentation licensed under [CC BY 3.0](http://creativecommons.org/licenses/by/3.0)

## Contact
Weather Icons is maintained by Erik Flowers. Reach me at [@Erik_UX](http://www.twitter.com/erik_flowers) or at [http://www.helloerik.com](http://www.helloerik.com).
",,,False,True,False,False,148.0,4.0,20.0,10.0,,,,,,0.173789600757,0.826210399243,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,tensorflow/tensorflow,DEV,tensorflow,tensorflow,3330.0,Computation using data flow graphs for scalable machine learning,534.0,711.0,2806.0,599.0,15870.0,1179.0,35812.0,37.0,0.0,386696.0,"<div align=""center"">
  <img src=""https://www.tensorflow.org/images/tf_logo_transp.png""><br><br>
</div>
-----------------

| **`Linux CPU`** | **`Linux GPU`** | **`Mac OS CPU`** | **`Windows CPU`** | **`Android`** |
|-----------------|---------------------|------------------|-------------------|---------------|
| [![Build Status](https://ci.tensorflow.org/buildStatus/icon?job=tensorflow-master-cpu)](https://ci.tensorflow.org/job/tensorflow-master-cpu) | [![Build Status](https://ci.tensorflow.org/buildStatus/icon?job=tensorflow-master-linux-gpu)](https://ci.tensorflow.org/job/tensorflow-master-linux-gpu) | [![Build Status](https://ci.tensorflow.org/buildStatus/icon?job=tensorflow-master-mac)](https://ci.tensorflow.org/job/tensorflow-master-mac) | [![Build Status](https://ci.tensorflow.org/buildStatus/icon?job=tensorflow-master-win-cmake-py)](https://ci.tensorflow.org/job/tensorflow-master-win-cmake-py) | [![Build Status](https://ci.tensorflow.org/buildStatus/icon?job=tensorflow-master-android)](https://ci.tensorflow.org/job/tensorflow-master-android) |

**TensorFlow** is an open source software library for numerical computation using
data flow graphs.  Nodes in the graph represent mathematical operations, while
the graph edges represent the multidimensional data arrays (tensors) that flow
between them.  This flexible architecture lets you deploy computation to one
or more CPUs or GPUs in a desktop, server, or mobile device without rewriting
code.  TensorFlow also includes TensorBoard, a data visualization toolkit.

TensorFlow was originally developed by researchers and engineers
working on the Google Brain team within Google's Machine Intelligence research
organization for the purposes of conducting machine learning and deep neural
networks research.  The system is general enough to be applicable in a wide
variety of other domains, as well.

**If you'd like to contribute to TensorFlow, be sure to review the [contribution
guidelines](CONTRIBUTING.md).**

**We use [GitHub issues](https://github.com/tensorflow/tensorflow/issues) for
tracking requests and bugs, but please see
[Community](tensorflow/g3doc/resources/index.md#community) for general questions
and discussion.**

## Installation
*See [Download and Setup](tensorflow/g3doc/get_started/os_setup.md) for instructions on how to install our release binaries or how to build from source.*

People who are a little more adventurous can also try our nightly binaries:

* Linux CPU-only: [Python 2](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.12.1-cp27-none-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave)) / [Python 3.4](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.12.1-cp34-cp34m-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/)) / [Python 3.5](https://ci.tensorflow.org/view/Nightly/job/nightly-python35-linux-cpu/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-python35-linux-cpu/))
* Linux GPU: [Python 2](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.1-cp27-none-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-linux/)) / [Python 3.4](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.1-cp34-cp34m-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=gpu-linux/)) / [Python 3.5](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3.5,label=gpu-linux/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.1-cp35-cp35m-linux_x86_64.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-linux-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3.5,label=gpu-linux/))
* Mac CPU-only: [Python 2](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=mac-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.12.1-py2-none-any.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=mac-slave/)) / [Python 3](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=mac-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.12.1-py3-none-any.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=mac-slave/))
* Mac GPU: [Python 2](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-mac-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-mac/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.1-py2-none-any.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-mac-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-mac/)) / [Python 3](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-mac-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=gpu-mac/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow_gpu-0.12.1-py3-none-any.whl) ([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-matrix-mac-gpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=gpu-mac/))
* Android: [demo APK](https://ci.tensorflow.org/view/Nightly/job/nightly-android/lastSuccessfulBuild/artifact/out/tensorflow_demo.apk), [native libs](http://ci.tensorflow.org/view/Nightly/job/nightly-android/lastSuccessfulBuild/artifact/out/native/)
([build history](https://ci.tensorflow.org/view/Nightly/job/nightly-android/))

#### *Try your first TensorFlow program*
```shell
$ python
```
```python
>>> import tensorflow as tf
>>> hello = tf.constant('Hello, TensorFlow!')
>>> sess = tf.Session()
>>> sess.run(hello)
Hello, TensorFlow!
>>> a = tf.constant(10)
>>> b = tf.constant(32)
>>> sess.run(a+b)
42
>>>
```

##For more information

* [TensorFlow website](http://tensorflow.org)
* [TensorFlow whitepaper](http://download.tensorflow.org/paper/whitepaper2015.pdf)
* [TensorFlow Model Zoo](https://github.com/tensorflow/models)
* [TensorFlow MOOC on Udacity](https://www.udacity.com/course/deep-learning--ud730)

The TensorFlow community has created amazing things with TensorFlow, please see the [resources section of tensorflow.org](https://www.tensorflow.org/versions/master/resources#community) for an incomplete list.
",0.422896967865,0.000404333610292,False,False,True,False,9912.0,14.0,13.0,11.0,,,0.00860201166794,0.0016906002862,,0.0173060072771,2.55786035444e-05,,,,0.000776016496679,,,,0.00313708023083,0.00237963631191,0.00213459064618,0.000233181688126,0.448486576157,0.0605900607099,0.0238777255506,0.00282838548185,0.00463124741694,,,,,,,,,,,,,,,
21,cs231n/cs231n.github.io,WEB,cs231n,cs231n.github.io,228.0,Public facing notes page,41.0,11.0,8.0,51.0,822.0,45.0,1632.0,29.0,0.0,14200.0,"
Notes and assignments for Stanford CS class [CS231n: Convolutional Neural Networks for Visual Recognition](http://vision.stanford.edu/teaching/cs231n/)

",,0.176891751617,True,True,True,False,270.0,1.0,0.0,0.0,,,,,,0.523063000719,0.300045247664,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,m2mtech/smashtag-2015,HW,m2mtech,smashtag-2015,2.0,Smashtag of the cs193p lecture (Winter 2015),1.0,0.0,1.0,0.0,18.0,0.0,19.0,0.0,0.0,250.0,"# Smashtag of the cs193p lecture (Winter 2015)

written in Xcode 6.3.1 for iOS8.3+


### various versions are available via branches and tags:

+ [Project #4 Assignment #4 Extra Task #6](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-6-winter-2015/) -> [project4assignment4extratask6](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask6)
+ [Project #4 Assignment #4 Extra Task #5](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-5-winter-2015/) -> [project4assignment4extratask5](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask5)
+ [Project #4 Assignment #4 Extra Task #4](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-4-winter-2015/) -> [project4assignment4extratask4](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask4)
+ [Project #4 Assignment #4 Extra Task #3](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-3-winter-2015/) -> [project4assignment4extratask3](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask3)
+ [Project #4 Assignment #4 Extra Task #2](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-2-winter-2015/) -> [project4assignment4extratask2](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask2)
+ [Project #4 Assignment #4 Extra Task #1](http://cs193p.m2m.at/cs193p-project-4-assignment-4-extra-task-1-winter-2015/) -> [project4assignment4extratask1](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4extratask1)
+ [Project #4 Assignment #4 Task #9](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-9-winter-2015/) -> [project4assignment4task9](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task9)
+ [Project #4 Assignment #4 Task #8](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-8-winter-2015/) -> [project4assignment4task8](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task8)
+ [Project #4 Assignment #4 Task #7](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-7-winter-2015/) -> [project4assignment4task7](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task7)
+ [Project #4 Assignment #4 Task #6](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-6-winter-2015/) -> [project4assignment4task6](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task6)
+ [Project #4 Assignment #4 Task #5](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-5-winter-2015/) -> [project4assignment4task5](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task5)
+ [Project #4 Assignment #4 Task #4](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-4-winter-2015/) -> [project4assignment4task4](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task4)
+ [Project #4 Assignment #4 Task #3](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-3-winter-2015/) -> [project4assignment4task3](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task3)
+ [Project #4 Assignment #4 Task #2](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-2-winter-2015/) -> [project4assignment4task2](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task2)
+ [Project #4 Assignment #4 Task #1](http://cs193p.m2m.at/cs193p-project-4-assignment-4-task-1-winter-2015/) -> [project4assignment4task1](https://github.com/m2mtech/smashtag-2015/tree/project4assignment4task1)

[End of Lecture #10](http://cs193p.m2m.at/cs193p-lecture-10-table-view-winter-2015/) -> [EndOfLecture10](https://github.com/m2mtech/smashtag-2015/tree/EndOfLecture10)",,,False,False,False,False,20.0,4.0,15.0,0.0,1.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,openaddresses/openaddresses,DATA,openaddresses,openaddresses,105.0,A repository of address data.,108.0,133.0,673.0,218.0,555.0,1074.0,754.0,22.0,1.0,8795.0,"# OpenAddresses

[![Build Status](https://travis-ci.org/openaddresses/openaddresses.png?branch=master)](https://travis-ci.org/openaddresses/openaddresses)
[![Build Status](https://david-dm.org/openaddresses/openaddresses.png)](https://david-dm.org/openaddresses/openaddresses)

A global collection of address data sources, open and free to use. Join, download and contribute. We're just getting started.

This repository is a collection of references to address data sources.

- See [openaddresses.io](http://openaddresses.io/) for a data download. 

## Contributing addresses

- [Open an issue](https://github.com/openaddresses/openaddresses/issues/new) and give information about where to find more address data. Be sure to include a link to the data and a description of the coverage area for the data.
- You can also create a pull request to the [sources](https://github.com/openaddresses/openaddresses/tree/master/sources) directory.
- More details in [CONTRIBUTING.md](CONTRIBUTING.md).

## Why collect addresses?

Street address data is essential infrastructure. Street names, house numbers and zip codes, when combined with geographic coordinates, are the hub that connects digital to physical places. Precisely because of their connecting role, free and open addresses are rocket fuel for civic and commercial innovation.

## License

Code is available under BSD, the data collection (sources/) is public domain. See respective LICENSE files in project root for code and under sources/ for the data collection.

",0.254873168063,0.632691255651,False,False,True,True,4459.0,21.0,0.0,0.0,,,0.0808499611298,,,,,,,,0.0315856151565,,,,,,,,,,,,,,,,,,,,,,,,,,,
24,benbalter/congressional-districts,DATA,benbalter,congressional-districts,17.0,"Historic and current US Congressional districts as GeoJSON, versioned within Git",1.0,1.0,0.0,2.0,27.0,0.0,94.0,1.0,0.0,28150.0,"# US Congressional Districts

*Historic and current US Congressional districts as GeoJSON, versioned within Git*

## Usage

### Viewing a district's history

1. Select a state from the list above
2. Select a district
3. You will see the district boundaries for the 113th congress
4. Click history
5. Select a congress to compare changes in that district boundaries to the previous congress, if any

### As an API

Files in this repository follow a predictable file structure and can be treated as a RESTful API.

Each district's geoJSON for the current year can be retrieved via `ben.balter.com/congressional-districts/#{STATE}/#{DISTRICT}.geojson` where `STATE` is the two character state postal code, and `DISTRICT` is the two digit congressional district number with leading `0`s.

## Data

All data obtained from [US Census Datasets](http://www.census.gov/geo/maps-data/data/cbf/cbf_cds.html), although I don't guarantee their accuracy.

## Building

`script/build` will download all the relevant datasets (if not already downloaded), unzip, convert from ESRI Shapefile to the open GeoJSON format, break into files/folders by state/district, and commit, amending the git history to reflect the day the congress took session.

## License

MIT
",,,False,False,True,False,5986.0,1.0,0.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
25,Chicago/food-inspections-evaluation,WEB,Chicago,food-inspections-evaluation,30.0,This repository contains the code to generate predictions of critical violations at food establishments in Chicago. It also contains the results of an evaluation of the effectiveness of those predictions.,15.0,2.0,66.0,7.0,58.0,20.0,131.0,2.0,0.0,237750.0,"Food Inspections Evaluation
============================

This is our model for predicting which food establishments are at most risk for the types of violations most likely to spread food-borne illness. Chicago Department of Public Health staff use these predictions to prioritize inspections. During a two month pilot period, we found that that using these predictions meant that inspectors found critical violations much faster.

You can help improve the health of our city by improving this model. This repository contains a training and test set, along with the data used in the current model. 

Feel free to clone, fork, send pull requests and to file bugs. 
Please note that we will need you to agree to our Contributor License Agreement (CLA) in order to be able to use any pull requests.


Original Analysis and Reports
-----------------------------
In an effort to reduce the public’s exposure to foodborne illness the [City of Chicago](https://github.com/Chicago) partnered with Allstate’s Quantitative Research & Analytics department to develop a predictive model to help prioritize the city's food inspection staff.  This Github project is a complete working evaluation of the model including the data that was used in the model, the code that was used to produce the statistical results, the evaluation of the validity of the results, and documentation of our methodology.

The model evaluation calculates individualized risk scores for more than ten thousand Chicagoland food establishments using publically available data, most of which is updated nightly on [Chicago’s data portal](https://data.cityofchicago.org/). The sole exception is information about the inspectors.

The evaluation compares two months of Chicago’s Department of Public Health inspections to an alternative data driven approach based on the model. The two month evaluation period is a completely out of sample evaluation based on a model created using test and training data sets from prior time periods.

The reports may be reproduced compiling the knitr documents present in ``./REPORTS``.

REQUIREMENTS
------------

All of the code in this project uses the open source statistical application, R.  We advise that you use ```R version >= 3.1``` for best results. 

Ubuntu users may need to install `libssl-dev`, `libcurl4-gnutls-dev`, and `libxml2-dev`.  This can be accomplished by typing the following command at the command line:
`sudo apt-get install libssl-dev libcurl4-gnutls-dev libxml2-dev`

The code makes extensive usage of the ``data.table`` package. If you are not familiar with the package, you might want to consult the data.table [FAQ available on CRAN] (http://cran.r-project.org/web/packages/data.table/vignettes/datatable-faq.pdf).


FILE LAYOUT
------

The following directory structure is used:

DIRECTORY           | DESCRIPTION
--------------------|----------------------
`.`                 | Project files such as README and LICENSE
`./CODE/`           | Sequential scripts used to develop model
`./CODE/functions/` | General function definitions, which could be used in any script
`./DATA/`           | Data files created by scripts in `./CODE/`, or static
`./REPORTS/`        | Reports and other output are located in 

We have included all of the steps used to develop the model, evaluate the results, and document the results in the above directory structure.

The scripts located in the `./CODE/` folder are organized sequentially, meaning that the numeric prefix indicates the order in which the script was / should be run in order to reproduce our results.

Although we include all the necessary steps to download and transform the data used in the model, we also have stored a snapshot of the data in the repository.  So, to run the model as it stands, it is only necessary to download the repository, install the dependencies, and step through the code in `CODE/30_glmnet_model.R`.  If you do not already have them, the dependencies can be installed using the startup script `CODE/00_Startup.R`.

DATA
------

Data used to develop the model is stored in the ``./DATA`` directory. [Chicago’s Open Data Portal](http://data.cityofchicago.org). The following datasets were used in the building the analysis-ready dataset. 

```
Business Licenses
Food Inspections 
Crime
Garbage Cart Complaints
Sanitation Complaints
Weather
Sanitarian Information
```

The data sources are joined to create a tabular dataset that paints a statistical picture of a ‘business license’- The primary modelling unit / unit of observation in this project.

The data sources are joined (in SQLesque manner) on appropriate composite keys. These keys include Inspection ID, Business License, and Geography expressed as a Latitude / Longitude combination among others. 


Acknowledgements
----------------
This research was conducted by the City of Chicago with support from the [Civic Consulting Alliance](http://www.ccachicago.org/), and [Allstate Insurance](https://www.allstate.com/). The City would especially like to thank Stephen Collins, Gavin Smart, Ben Albright, and David Crippin for their efforts in developing the predictive model. We also appreciate the help of Kelsey Burr, Christian Hines, and Kiran Pookote in coordinating this research project. We owe a special thanks to our volunteers from Allstate who put in a tremendous effort to develop the predictive model and allowing their team to volunteer for projects to change their city. This project was partially funded by an award from the Bloomberg Philanthropies' Mayors Challenge.
",,,False,True,True,False,234.0,6.0,3.0,3.0,,,,,0.00278276801805,0.963263858441,,,,0.0339533735412,,,,,,,,,,,,,,,,,,,,,,,,,,,,
26,OpenInstitute/OpenDuka,DEV,OpenInstitute,OpenDuka,24.0,"Open Duka is a project designed by the Open Institute that will provide a freely accessible database of information on Kenyan entities.   This information will provide citizens, journalists, and civic activists with a practical and easy-to-use tool to understand the ownership structure of the world they live in, demonstrating the practical applications of open information for normal citizens. It will serve as a core dataset for citizens, journalists, and civic activists who want to build 3rd party public transparency and public accountability apps or services, by allowing them to cross reference the Open Duka company shareholder data against other datasets. ",5.0,1.0,0.0,6.0,37.0,0.0,40.0,5.0,0.0,12590.0,"OpenDuka
========

Open Duka is a project designed by the Open Institute that will provide a freely accessible database of information on Kenyan entities. 

This information will provide citizens, journalists, and civic activists with a practical and easy-to-use tool to understand the ownership structure of the world they live in, demonstrating the practical applications of open information for normal citizens. It will serve as a core dataset for citizens, journalists, and civic activists who want to build 3rd party public transparency and public accountability apps or services, by allowing them to cross reference the Open Duka company shareholder data against other datasets. 

The project aims to scrape data from various sources that range from shareholder information, procurement information, legal cases and company information.

The current pilot is being launched in Kenya in partnership with the National Council of Law Reporting and funded by A.T.T.I.

This will be expanded to other sources of corporate data and the site will incorporate visualizations that will be able to show linkages of the data.


Installation
============

Install CodeIgnighter. Download it at https://github.com/EllisLab/CodeIgniter and follow installation documentation.

Download OpenDuka files to the CodIgniter instance folder.

Edit the config.php in the application/config folder to reflect the web instance you are running.

Upload and reconstruct the database from the openduka_alpha.sql file.

Edit the database.php in the application/config folder to reflect the database instance you are running.


License
=======

Open Duka by Open Institute is licensed under a Creative Commons Attribution-NonCommercial 3.0 Unported License.
",,0.0944394900444,False,True,False,False,106.0,6.0,0.0,0.0,,,,,,,0.038450359635,,,,,,0.867110150321,,,,,,,,,,,,,,,,,,,,,,,,,
27,torvalds/linux,DEV,torvalds,linux,5137.0,Linux kernel source tree,1000.0,206.0,2.0,126.0,12432.0,8.0,38443.0,123.0,0.0,1965689.0,"Linux kernel
============

This file was moved to Documentation/admin-guide/README.rst

Please notice that there are several guides for kernel developers and users.
These guides can be rendered in a number of formats, like HTML and PDF.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.
See Documentation/00-INDEX for a list of what is contained in each file.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
",0.000393494674931,,False,False,True,False,634115.0,1.0,483.0,0.0,,,0.000322730025275,,,,,,,,0.00271003508298,,,,0.956366682086,,,0.00117491950864,0.0197450627643,,,,,,,,0.00135611002448,0.000140331311734,,,7.33631255486e-05,,,0.0176144895073,3.08226547843e-05,4.61327318061e-06,3.89022641763e-05,2.84436965009e-05
28,bhuga/bhuga.net,WEB,bhuga,bhuga.net,1.0,A tutorial on how to create a professional online image.,1.0,0.0,1.0,0.0,2.0,0.0,1.0,0.0,0.0,2794.0,,,0.226970694048,False,True,False,False,145.0,5.0,0.0,0.0,,0.09137465272,,,,0.30158628548,0.278054463748,,,,,,,0.102013904003,,,,,,,,,,,,,,,,,,,,,,,,
29,macloo/just_enough_code,DEV,macloo,just_enough_code,2.0,Visual Communication Skills for the Journalism and Mass Communication Classroom - AEJMC 2016 - workshop,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,183.0,"# Just Enough Code

Teaching web design in 2016 shouldn't be about software and which buttons to push. This 20-minute segment was part of a pre-conference workshop from the Visual Communication Division of [AEJMC](http://www.aejmc.org/). [See slides.](http://www.slideshare.net/macloo/just-enough-code) 

In my view, code is empowering. Using code is like using brushes and paint, and using software tools is like using an Etch A Sketch.

![Photo: Etch A Sketch toy](images/etch-a-sketch.jpg)

*Don't teach your students to use this.*

**A WORD OF WARNING:** HTML, CSS, and JavaScript have all evolved over the years. When you search online for answers, tutorials, and examples, check *carefully* to find a date, and make sure you are not using old techniques that have been replaced. Outdated info is a big source of trouble for beginners!

## Step 1: HTML

Use [JSFiddle](https://jsfiddle.net/) to let students play with HTML tags. Students can create a free account, save their work, and turn in a JSFiddle URL for a grade. [Here is an example.](https://jsfiddle.net/macloo/3j60uz7b/) Use the example by changing things, adding things, moving things. Learn code by playing with code!

The key commands in JSFiddle are Run, Save and Update, and Set as Base.

![Screen capture: JSFiddle controls](images/JSFiddle-commands.png)

First, focus on learning to use headings, paragraphs, images, and links (as in the example). Emphasize that HTML is intended to reflect the document's structure. For example, use an `h1` tag *only* for the top-level heading in the document, and do not use `h` tags (`h1` through `h6`) on any text that is *not a heading*. The tags are not meant to make text *look* a certain way; they are meant to mark up the structural elements.

```
<h1> </h1>
<p> </p>
<img src="""" alt="""">
<a href=""""> </a>
```

Note that all images must have an `alt` attribute, or the HTML will not [validate](https://html5.validator.nu/). If you don't believe me, [read this](https://www.joedolson.com/2015/03/are-alt-attributes-required-always/).

Another thing to note is that today, no tags require a slash at the end — `/>` — that was XHTML, and it's gone. All modern browsers support HTML5 now. Tags are either paired — `<p> </p>` — or empty — `<img>`. Paired tags typically have text between them.

The `<br>` tag is not intended for creating linespaces. [Its few legitimate uses](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br) include postal addresses and poetry.

```
<p>Mary McFee<br>
123 Main Street<br>
Littletown, FL 32611</p>

<p>A fly and a flea in a flue<br>
Were imprisoned, so what could they do?<br>
Said the fly: ""Let us flee!""<br>
""Let us fly!"" said the flea.<br>
So they flew through a flaw in the flue.</p>
```

If you want to introduce bold and italic styles, use the `<strong>` and `<em>` tags, not the old `<b>` and `<i>` tags!

Above all, do not let students insert style elements such as fonts and colors into the HTML tags. That is not how it's done in 2016.

After headings, paragraphs, images, and links, students should learn to use the three types of lists: ordered, unordered, and definition ([see example file, lines 51–73](https://github.com/macloo/just_enough_code/blob/master/basic_html_no_css.html)). Save forms and tables for *much* later. Also, we'll get to `html`, `head`, and `body` in step 3, below.

### Reliable HTML resources:

* [HTMLDog tutorials: HTML](http://htmldog.com/guides/html/beginner/)
* [Codecademy HTML & CSS](https://www.codecademy.com/learn/web)

## Step 2: CSS

Still using JSFiddle, you can introduce hexadecimal colors — see [video](https://www.youtube.com/watch?v=iJcIlC4yFIQ&index=22&list=PLZFU-W6LLeecJuSQh20QUU_gCmS30sLTB) (4 min.). In CSS, the `background` property determines the background color of an element, and the `color` property determines the foreground or text color.

Color will always be separated from the HTML. JSFiddle makes it easy to do this from the very start. [Here is an example.](https://jsfiddle.net/macloo/79fkd75m/)

```
body {
  background: #E2F0D6;
}
h1 {
  background: #95AB63;
  color: #F6FFE0;
}
```

Students like using the [Adobe Color site](https://color.adobe.com/) for experimenting with color palettes. They can easily copy hexadecimal codes from there.

![Screen capture: Adobe Color site](images/adobe-color.jpg)

* [Video about using Adobe Color](https://www.youtube.com/watch?v=Um7TVYF0QIU&list=PLZFU-W6LLeecJuSQh20QUU_gCmS30sLTB&index=21) (4 min. 24 sec.)
* [Video about the hexadecimal color codes](https://www.youtube.com/watch?v=iJcIlC4yFIQ&list=PLZFU-W6LLeecJuSQh20QUU_gCmS30sLTB&index=22) (4 min.)

Along with colors, you can introduce link styles (pseudo classes). This is a simple way to start that reinforces working with hexadecimal colors and the background and color properties:
```
a {
    color: #95AB63;
}
a:hover {
    color: #F6FFE0;
    background: #152C73;
    text-decoration: none;
}
```

**What that does:** The first selector, `a`, affects all the uses of the `a` tag on the page. In this case, the block for `a` changes the text color to green. The second selector, `a:hover`, affects all links on the page when they are moused over. In this case, the block for `a:hover` contains three declarations that: (1) change the text color to yellow; (2) change the background color to dark blue; and (3) remove the underline from the link text.

After students have some experience with colors and CSS, you can introduce padding, margins, borders, and the [CSS box model](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model). (Do not get into DIVs, HTML5 elements, or positioning until students have experimented with padding, margins, and borders.)

Using borders is a great way to learn the different effects of margins and padding. [Here is an example.](https://jsfiddle.net/macloo/ux4kLdLg/) Note that every `p` element has a red border, and the left margin is 50 pixels. The `h1` element has no border and no margins, but it has 20 pixels of padding on all four sides.

I recommend saving fonts until later, when the students are working with real files and not JSFiddle.

### Using `div`

The HTML `div` tag is like duct tape — it has thousands of uses. When you wrap HTML in a pair of `div` tags, you can use CSS (and JavaScript) to do all kinds of things to that wrapped block. To target a specific `div` with CSS, we must give it a unique `id` in the HTML. [Here is an example.](https://jsfiddle.net/macloo/hxjn97u5/) Play with it!

### Reliable CSS resources:

* [HTMLDog tutorials: CSS](http://htmldog.com/guides/css/beginner/)
* [Codecademy HTML & CSS](https://www.codecademy.com/learn/web)

## Step 3: Using a Text Editor and Managing Files

There is more about code, I promise, but first we need to talk about text editors for Windows and Mac. You need to use a proper text editor for code, and you **must not use** Notepad (Windows) or TextEdit (Mac) because they don't do the right things in the right way.

![Screen capture: Atom text editor](images/atom-screen-shot.png)

[Atom](https://atom.io/) is my top recommendation for everyone.  [Notepad++](https://notepad-plus-plus.org/) will work for any Windows version (in case for some reason Atom does not work for you). Both are free.

At this point, your students can download a zipped copy of [this GitHub repo](https://github.com/macloo/just_enough_code): Click the **Clone or download** button and then click **Download ZIP**. This gives them a proper file structure for a project (with separate folders for *css, images,* and *scripts*) and a few file templates to work with.

![Screen capture: Download from GitHub](images/download-zip.png)

**NOTE:** You don't need to use GitHub for anything other than this download. However, learning GitHub and teaching students to use it — in conjunction with the free [GitHub app](https://desktop.github.com/) — is incredibly great for teaching beyond the basics. Also: [GitHub Pages](https://pages.github.com/) let you publish websites for free!

### Use the example files

* [HTML file](https://github.com/macloo/just_enough_code/blob/master/basic_html_with_css.html)
* [CSS file](https://github.com/macloo/just_enough_code/blob/master/css/beginner.css)
* [Live page](http://macloo.github.io/just_enough_code/basic_html_with_css.html)

As you'll see, the live page is not pretty! A possible exercise is to improve the page by editing the CSS file. The HTML and CSS files are intended to be changed, by you or by anyone, for learning.

### Good work habits

It's important to start with good work habits for files. A few tips:

1. Always create a new folder for a new code project.
2. Inside that folder, create three separate folders for *css, images,* and *scripts*.
3. Save files into their proper folders.
4. Use relative URLs for images and for links within the project, because this makes the project portable. When the complete folder is uploaded to a web server, everything will work just as it does on the local hard drive. Relative URLs and links are explained [in this video](https://www.youtube.com/watch?v=K9NVYCego_4&list=PLZFU-W6LLeecJuSQh20QUU_gCmS30sLTB&index=13).

### Document structure

The basic, correct, standard structure for an HTML document in 2016 is this:

```
<!DOCTYPE html>
<html>
    <head>
        <!-- meta tags, title, link tags -->
    </head>

    <body>
        <!-- all content visible to users goes here -->
    </body>
</html>
```

The contents of the `head` section *and their order* are quite important. The minimum inside the `head` is as follows:

```
<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title> write a good title for search engines </title>
</head>
```

If stylesheets are linked, the `link` tag goes inside the `head` and below the `title`.

The *meta charset* tag is explained well [here](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Introduction_to_HTML5).

Here is a good [explanation](https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag) of the *viewport meta tag.*

### Relevance of step 3

In this outline, I recommend a learning order that corresponds to a progression of expertise in a newsroom or other editing/production environment. The basic level of knowledge is HTML (step 1) and the ability to write (or fix) links, images, etc.

A little more advanced is the ability to write (or fix) specific CSS styles, such as colors, font sizes, and margins (step 2). Steps 1 and 2 apply to working within content management systems as well as outside them.

Step 3 goes beyond content management systems (such as WordPress) and enables  students to create complete standalone documents outside a content management system. Being able to use a text editor and manage files means they can create a site consisting of many pages, or a single-page application for web or mobile, or both.

At this point, students can begin learning about:

* Page layouts and responsive design/design for mobile devices
* Responsive images
* Optimizing image file size for best performance
* [Accessibility](https://www.w3.org/standards/webdesign/accessibility) for disabilities

## Step 4: JavaScript and jQuery

Thanks to [JSFiddle](https://jsfiddle.net/), which was introduced above, students can experiment very quickly with JavaScript and jQuery. It helps to understand the basics of HTML and CSS first.

Why teach JavaScript and jQuery to beginners? Because JavaScript is what makes digital content *interactive.* If you want it to move, spin, fold, animate, calculate, or just plain respond, then it needs JavaScript!

[jQuery](http://jquery.com/) is a JavaScript library, and JSFiddle makes it easy to start using it. In JSFiddle, open the menu in the JavaScript pane (shown below), change the two fields indicated, and you're ready to play.

![Screen capture: jQuery in JSFiddle](images/jQuery-in-JSFiddle.png)

I like to start students with something they can alter. Again, JSFiddle is perfect for this. [Here is an example.](https://jsfiddle.net/macloo/xegj2oe7/)

### The jQuery example

In that example, here are the important parts of the HTML:

```
<label>Subject</label>
<input type=""text"" id=""subject"" value=""The rain"">
<label>Verb</label>
<input type=""text"" id=""verb"" value=""falls"">
<label>Object</label>
<input type=""text"" id=""object"" value=""on the plains"">

<p id=""sentence"">
    Something new will appear here soon.
</p>
```

* `<label>` is an HTML tag used in conjunction with form fields. It contains text. This is not relevant to our JavaScript at all. We did not mention this tag until now, and I've put it into the HTML because using this tag is the standard way to label a form field.
* `<input type=""text"">` creates a form field into which we can type. You might call it a ""text entry field."" We can optionally give it a unique `id`. If we do not give it an optional `value`, it will be blank. (This is another HTML tag that we have not mentioned before.)
* `<p id=""sentence"">` is a normal `p` tag with an optional unique `id` added. This is the standard way to designate a unique identifier for any HTML element.

The `id` is usually **the key to manipulating things with JavaScript.** If something in your HTML has an `id`, you can address it and do things to it with a script. It's *vital* that each `id` is unique on the page. If it's not, the script will not work properly because it will be looking at more than one thing when it expects only one!

Take a moment to play with the live example in JSFiddle. Inside the lower right pane, change the text several times and watch what happens as a result.

Now look at the JavaScript/jQuery code:

```
// when subject value changes, change the text
$('#subject').change(function() {
    s = ($('#subject').val());
	v = ($('#verb').val());
	o = ($('#object').val());
    $('#sentence').text(s + "" "" + v + "" "" + o);
});
```

There are two more chunks of code that are nearly identical to that one. See if you can find the one-word difference in each chunk.

If you discovered that the difference is `$('#subject').` and `$('#verb').` and `$('#object').` in the second line (the first line is a *comment*) — congratulations!

What do those three things refer to? They refer to the unique `id` attributes **in the HTML.** Each `id` is in an `input` tag. Each chunk of script is ""listening"" to a specific `input` element — the one with the matching `id`. Listening — for what? For a *change* in the element. If you change the text and then Tab or Return, the script for that text-input goes into action.

What is the action that ensues? It takes place in four parts, one part per line of script. This is what each line does:

1. Puts the *value* of the text-input with `id` ""subject"" into a *variable,* s.
2. Puts the *value* of the text-input with `id` ""verb"" into a *variable,* v.
3. Puts the *value* of the text-input with `id` ""object"" into a *variable,* o.
4. Creates a *string* from s, v, and o by adding (actually, *concatenating*) them together with single spaces: `(s + "" "" + v + "" "" + o)`. Finds the element in the HTML with `id` ""sentence"" — because of `$('#sentence')`. Then *replaces* the text inside that element (the `p`) with the new string — because of `.text()`.

Right now you might be wondering how you would ever learn all those bits and pieces and how to put them together. Most people learn by looking at fairly simple scripts, playing with them, and modifying them. You don't need to know *everything* to be able to do *something.*

**NOTE:** This script is far from perfect. Its worst flaw is redundancy. Using JSFiddle, you and your students can try to improve this script.

### The pattern for changing things

The use of `id` attributes **in the HTML,** combined with a standard pattern in jQuery, makes possible quite a lot of things:

```
$('#some_id').some_action(function() {
    // code that makes things happen
    // can be several lines, or one
});
```

This document does not cover the use of `id` and `class` in detail. The core difference between them is that an `id` **must be unique** in a document, and `class` can be reused as many times as needed. Thus we can assign one `class` to several headings and paragraphs on a page and give all of them a bright yellow background, like highlighting, using CSS. We can use jQuery to manipulate both `id` and `class`.

### More examples

The JavaScript/jQuery scripts in [these examples](https://github.com/macloo/jQuery_useful) are heavily commented so that beginners can learn from them.

See my [public Fiddles](https://jsfiddle.net/user/macloo/fiddles/) for more examples. Some of the best/easiest ones:

* [animate 1](https://jsfiddle.net/macloo/n7wxbqch/)
* [animate 2](https://jsfiddle.net/macloo/bdLgwrwq/)
* [show and hide](https://jsfiddle.net/macloo/Lvs6y8jp/)
* [simple accordion menu](https://jsfiddle.net/macloo/nws97853/)
* [sliding sections](https://jsfiddle.net/macloo/bmLf12nd/)
* [toggle class](https://jsfiddle.net/macloo/7hfvgcLt/)
* [swap images](https://jsfiddle.net/macloo/3qr2jd8t/)

### Reliable JavaScript and jQuery resources:

* [Mozilla Developer Network: JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)
* [Codecademy: JavaScript](https://www.codecademy.com/learn/javascript)
* [Codecademy: jQuery](https://www.codecademy.com/learn/jquery)
* [Code School: jQuery](https://www.codeschool.com/courses/try-jquery)
",,0.0747684493576,False,False,False,False,46.0,2.0,0.0,0.0,,,,,,0.735584105169,0.189647445474,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
30,hughperkins/howto-jenkins-ssl,DOCS,hughperkins,howto-jenkins-ssl,3.0,"quick how to on activating ssl on jenkins, so I can find it easily",1.0,0.0,2.0,0.0,9.0,0.0,25.0,0.0,0.0,16.0,"# howto-jenkins-ssl
quick how to on activating ssl on jenkins, so I can find it easily

New!  Alternative procedure, using Lets Encrypt certificate, available now.  See [letsencrypt.md](letsencrypt.md).

# given:

- your website is at jenkins.myweb.com
- have openssl installed

# generate key

```
openssl genrsa -out key.pem  # creates key.pem

openssl req -new -key key.pem -out csr.pem
# you need to put the dns name of your website, testweb.local
# for the 'Common Name' question
# other questions, you can just accept defaults
# actually, you can accept defaults for all, will work ok too

openssl x509 -req -days 9999 -in csr.pem -signkey key.pem -out cert.pem
rm csr.pem
```

# start jenkins

* if you want both https and http:

```
java -jar jenkins.war --httpsPort=8443 --httpsCertificate=cert.pem --httpsPrivateKey=key.pem
```

* if you want https only, dont open http port:

```
java -jar jenkins.war --httpsPort=8443 --httpsCertificate=cert.pem --httpsPrivateKey=key.pem --httpPort=-1
```

# starting a slave

* Convert the cert.pem to cert.der:
```
 openssl x509 -outform der -in cert.pem -out cert.der
```

* create keystore, containing this cert:

```
keytool -import -alias testweb.local -keystore cacerts -file cert.der
# reply trust certificate=yes
# put keystore password of 'changeit', or make your own password
```
* transfer this file to the slave computer somehow (eg via /var/www/html, and download from slave)
* launch slave
  * as for normal slave launch, but add `-Djavax.net.trustStore=cacerts
```
java -Djavax.net.ssl.trustStore=cacerts -jar slave.jar -jnlpUrl https://jenkins.myweb.com:8443/computer/testnode/slave-agent.jnlp
```
=> will work ok :-)
",,,False,False,True,False,21.0,2.0,0.0,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
